{"version":3,"sources":["assets/scripts/ChJeremy.ts","assets/scripts/ChManager.ts","assets/scripts/ChTest.ts","assets/scripts/Ch.ts","assets/scripts/Console.ts","assets/scripts/Distance.ts","assets/scripts/EventList.ts","assets/scripts/Game.ts","assets/scripts/Ground.ts","assets/scripts/Lobby.ts","assets/scripts/Panel.ts","assets/scripts/Server.ts","assets/scripts/TokenGenerator.ts","assets/scripts/Token.ts"],"names":["Ch_1","require","_a","cc","_decorator","ccclass","property","ChJeremy","_super","__extends","prototype","onLoad","call","this","_assetsDir","MAX_JUMP_COUNT","loadFullRes","self","resources","load","err","clip","_animation","addClip","skill","__decorate","default","exports","EventList_1","Ch","_this","apply","arguments","multiplierLabel","_jumpImpl","_isFall","_downY","_groundCounts","node","getComponent","Animation","play","systemEvent","on","SystemEvent","EventType","KEY_DOWN","_jumpOnKeyDown","_run","_firstJump","_secondJump","_jump","Tween","stopAllByTarget","tween","delay","by","position","v3","start","_fall","y","_die","off","director","emit","ChEvent","DYING","getCollisionManager","enabled","to","parent","DIE","event","keyCode","macro","KEY","space","onCollisionExit","other","tag","includes","splice","indexOf","length","onCollisionEnter","worldSelf","world","aabbSelf","aabb","groundTop","height","push","TOUCH_GROUND","once","TOUCH_WALL","update","dt","Label","Component","chTest","Action","console","log","_onEventKeyDown","robotJe","name","age","sex","attack","_jumpCount","onDropCompleted","die2","Console","balanceLabel","winLabel","betLabel","priceLabel","_multiplier","_bet","_game","_ch","_balance","_win","Object","defineProperty","get","set","value","string","toString","sys","localStorage","getItem","balance","JSON","parse","ch","_setBalance","ServerEvent","BET","_onBet","NOTIFY_PRICE","_onNotifyPrice","NOTIFY_MULTIPLIER","_onNotifyMultiplier","setItem","price","thisMultiplier","instantiate","bet","addChild","destroy","worldPos","convertToWorldSpaceAR","nodePos","convertToNodeSpaceAR","win","multiplier","Prefab","Distance","label","_count","_alive","_distance","EventList","GET_PRIZE","Game","distance","panel","bg","_pause","_panelPopUp","SpriteFrame","spriteFrame","_onLoadCallback","Sprite","p","isPaused","resume","pause","distanceLabel","totalWinLabel","newRecord","active","Node","Ground","grounds","area1","area2","_bgMove","_setMove","_stopMove","_onTouchWall","_move","area","x","children","i","newGround","_getRandomGround","_bumpWall","max","Math","floor","random","Lobby","characterSelection","startBtn","joinBtn","leaveBtn","testBtn","webviewReq","webviewRes","_reqUrl","document","location","origin","_start","_join","_leave","_test","url","loadScene","ToggleContainer","Button","WebView","Panel","restart","leave","_restart","Server","tokenPricesJson","_tokenPrizes","_getPrize","json","tokens","_getRandomNumber","tokenType","prizes","val","JsonAsset","TokenEnum","TokenGenerator","tokenPos","tokenIdx","token","TokenGenerator_1","Token","tokenName","token0","type","Enum"],"mappings":"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","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nimport Ch from \"./Ch\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ChJeremy extends Ch {\n\n\n    //protected readonly MAX_JUMP_COUNT: 3\n    onLoad(): void {\n        super.onLoad();\n        this._assetsDir = \"\";\n        this.MAX_JUMP_COUNT = 3;\n        this.loadFullRes();\n    }\n\n    protected loadFullRes(): void {\n        var self = this;\n        cc.resources.load(\"ch/A/run\", function (err, clip) {\n            self._animation.addClip(clip, \"run\");\n        });\n        cc.resources.load(\"ch/A/beginJump\", function (err, clip) {\n            self._animation.addClip(clip, \"beginJump\");\n        });\n        cc.resources.load(\"ch/A/jump\", function (err, clip) {\n            self._animation.addClip(clip, \"jump\");\n        });\n        cc.resources.load(\"ch/A/fall\", function (err, clip) {\n            self._animation.addClip(clip, \"fall\");\n        });\n        cc.resources.load(\"ch/A/dropEnd\", function (err, clip) {\n            self._animation.addClip(clip, \"dropEnd\");\n        });\n        cc.resources.load(\"ch/A/die\", function (err, clip) {\n            self._animation.addClip(clip, \"die\");\n        });\n    }\n\n    protected skill(): void {\n        // attack\n    }\n    // update (dt) {}\n}\n","import EventList from \"./EventList\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\n\nexport default class Ch extends cc.Component {\n    \n    @property(cc.Label) multiplierLabel: cc.Label = null;\n    \n    private _animation: cc.Animation = null;\n\n    private _jumpImpl: Function = null;\n\n    private _isFall: boolean = true;\n\n    private _downY: number = -20;\n\n    private _groundCounts: cc.Node[] = [];\n\n    \n    onLoad () {\n        this._animation = this.node.getComponent(cc.Animation);\n        this._animation.play(\"fall\");\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this._jumpOnKeyDown, this);\n    }\n\n    private _run() {\n        this._jumpImpl = this._firstJump;\n        this._animation.play(\"run\");\n    }\n\n    private _firstJump() {\n        this._jumpImpl = this._secondJump;\n\n        this._jump();\n    }\n\n    private _secondJump() {\n        this._jumpImpl = null;\n        cc.Tween.stopAllByTarget(this.node);\n        this._jump();\n    }\n \n    private _jump() {\n        this._animation.play(\"beginJump\");\n        cc.tween(this.node)\n            .delay(0.08)\n            .call(() => {\n                this._animation.play(\"jump\");\n            })\n            .by(0.4, { position: cc.v3(0, 500, 0)})\n            .call(() => {\n                this._animation.play(\"fall\");\n                this._isFall = true;\n            })\n            .start();  \n    }\n\n    private _fall() {\n        this.node.y += this._downY;\n    }\n\n    private _die() { \n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this._jumpOnKeyDown, this);\n        cc.director.emit(EventList.ChEvent.DYING);\n        cc.director.getCollisionManager().enabled = false;\n        this._animation.play(\"die\");\n        cc.tween(this.node)\n            .to(3, { position: cc.v3(-730, 0, 0)})\n            .call(() => {\n                this.node.parent.emit(EventList.ChEvent.DIE);\n            })\n            .start(); \n    }\n    \n\n    private _jumpOnKeyDown (event:cc.Event.EventKeyboard) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.space:\n                if (this._jumpImpl) {\n                    this._isFall = false;\n                    this._jumpImpl();\n                }\n                break;\n        }\n    }\n\n    onCollisionExit (other: cc.BoxCollider, self: cc.BoxCollider) {\n        if (other.tag == 1) {\n            if (this._groundCounts.includes(other.node)) {\n                this._groundCounts.splice(this._groundCounts.indexOf(other.node), 1);\n            }\n\n            if (this._groundCounts.length == 0 && !(this._jumpImpl == this._secondJump)) {\n                this._animation.play(\"fall\");\n                this._isFall = true;\n            }\n        } \n    }\n    \n    onCollisionEnter (other: cc.BoxCollider, self: cc.BoxCollider) {\n        if (other.tag == 0) {\n            this._isFall = false;\n            this._die();\n        } else if (other.tag == 1) { \n            var worldSelf = self.world;\n            var aabbSelf = worldSelf.aabb ;\n            var groundTop = -360 + other.node.height;\n        \n            if (aabbSelf.y > other.node.height - 20) {\n                if (!(this._groundCounts.includes(other.node))) {\n                    this._groundCounts.push(other.node);\n                    cc.director.emit(EventList.ChEvent.TOUCH_GROUND); \n                    this._isFall = false;\n                    this.node.y = groundTop;\n                    if (this._groundCounts.length == 1) { \n                        this._animation.play(\"dropEnd\");\n                        this._animation.once(\"finished\", this._run, this);\n                    }\n                }\n            } else {\n                cc.director.emit(EventList.ChEvent.TOUCH_WALL);\n            }\n        }\n    }\n\n    update (dt) {\n        if (this._isFall) {\n            this._fall();\n        }\n    }\n}\n  ","const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class chTest extends cc.Component {\n\n    private _animation = cc.Action = null;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this._animation = this.node.getComponent(cc.Animation);\n        //this._animation.play(\"run\");\n        var self = this;\n        cc.resources.load(\"ch/A/run\", function (err, clip) {\n            self._animation.addClip(clip, \"run\");\n            console.log(\"run is ready to go\");\n        });\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this._onEventKeyDown, this);\n    }\n\n    private _onEventKeyDown (event:cc.Event.EventKeyboard) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.space:\n                    this._run();\n                    break;\n        }\n    }\n\n    private _run() {\n        this._animation.play(\"run\");\n    }\n\n    update (dt) { \n    }\n}\n","import EventList from \"./EventList\";\n\nconst {ccclass, property} = cc._decorator;\n\ninterface charactor {\n    name:string;\n    age:number;\n    sex:boolean;\n    attack();\n}\n\nclass robotJe implements charactor {\n    name = \"dd\";\n    age = 33;\n    sex = true;\n    attack() {\n    }\n}\n\n@ccclass\nexport default abstract class Ch extends cc.Component {\n    \n    @property(cc.Label) multiplierLabel: cc.Label = null;\n    \n    protected _animation: cc.Animation = null;\n\n    protected _isFall: boolean = true;\n\n    private _downY: number = -20;\n\n    private _groundCounts: cc.Node[] = [];\n\n    protected  MAX_JUMP_COUNT = 1;\n\n    protected _jumpCount: number = 0;\n\n    protected _assetsDir:string = \"\";\n    \n    onLoad () {\n        this._animation = this.node.getComponent(cc.Animation);\n        this._animation.play(\"fall\");\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this._jumpOnKeyDown, this);\n      //  this.loadFullRes();\n        \n    }\n\n    protected abstract loadFullRes(): void;\n\n    protected abstract skill(): void;\n\n    //on touch floor\n    private _run() {\n        //this._jumpCount = this.MAX_JUMP_COUNT;\n        //this._jumpImpl = this._firstJump;\n        this._animation.play(\"run\");\n\n    }\n\n    \n    private _jumpImpl() {\n        \n        if(this._jumpCount > 0) {\n            cc.Tween.stopAllByTarget(this.node);\n            this._isFall = false;\n            this._jumpCount -= 1;\n            this._jump();\n        } else {\n            //this._isFall = true;\n        }\n    }\n \n    private _jump() {\n        this._animation.play(\"beginJump\");\n\n        cc.tween(this.node)\n            .delay(0.08)\n            .call(() => {\n                this._animation.play(\"jump\");\n            })\n            .by(0.4, { position: cc.v3(0, 500, 0)})\n            .call(() => {\n                this._animation.play(\"fall\");\n                this._isFall = true;\n            })\n            .start();  \n\n        \n    }\n\n    private _fall() {\n        this.node.y += this._downY;\n    }\n\n    private _die() { \n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this._jumpOnKeyDown, this);\n        cc.director.emit(EventList.ChEvent.DYING);\n        cc.director.getCollisionManager().enabled = false;\n        this._animation.play(\"die\");\n        cc.tween(this.node)\n            .to(3, { position: cc.v3(-730, 0, 0)})\n            .call(() => {\n                this.node.parent.emit(EventList.ChEvent.DIE);\n            })\n            .start(); \n    }\n    \n\n    private _jumpOnKeyDown (event:cc.Event.EventKeyboard) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.space:\n            //    if (this._jumpImpl) {\n                  //  this._isFall = false;\n                    this._jumpImpl();\n             //   }\n                break;\n        }\n    }\n\n    onCollisionExit (other: cc.BoxCollider, self: cc.BoxCollider) {\n        if (other.tag == 1) {\n            if (this._groundCounts.includes(other.node)) {\n                this._groundCounts.splice(this._groundCounts.indexOf(other.node), 1);\n            }\n\n            if (this._groundCounts.length == 0 && this._jumpCount == this.MAX_JUMP_COUNT) {\n                this._animation.play(\"fall\");\n                this._isFall = true;\n            }\n        } \n    }\n    \n    onCollisionEnter (other: cc.BoxCollider, self: cc.BoxCollider) {\n        if (other.tag == 0) {\n            this._isFall = false;\n            this._die();\n        } else if (other.tag == 1) { \n            var worldSelf = self.world;\n            var aabbSelf = worldSelf.aabb ;\n            var groundTop = -360 + other.node.height;\n        \n            if (aabbSelf.y > other.node.height - 20) {\n                if (!(this._groundCounts.includes(other.node))) {\n                    this._groundCounts.push(other.node);\n                    cc.director.emit(EventList.ChEvent.TOUCH_GROUND); \n                    this._isFall = false;\n                    this._jumpCount = this.MAX_JUMP_COUNT;\n                    this.node.y = groundTop;\n                    if (this._groundCounts.length == 1) { \n                        this._animation.play(\"dropEnd\");\n                        //this._animation.once(\"finished\", this._run, this);\n                    }\n                }\n            } else {\n                cc.director.emit(EventList.ChEvent.TOUCH_WALL);\n            }\n        }\n    }\n\n    onDropCompleted () {\n        this._run();\n    }\n\n    protected die2 () {\n        this._die()\n    }\n    update (dt) {\n        if (this._isFall) {\n            this._fall();\n        }\n    }\n}\n  ","import Ch from \"./Ch\";\nimport EventList from \"./EventList\";\nimport Game from \"./Game\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Console extends cc.Component {\n\n    @property(cc.Label) balanceLabel: cc.Label = null;\n    @property(cc.Label) winLabel: cc.Label = null;\n    @property(cc.Label) betLabel: cc.Label = null;\n    @property(cc.Prefab) priceLabel: cc.Prefab = null;\n\n    \n    private _multiplier: number = 1; \n    private _bet: number = 10;\n\n    private _game: Game = null;\n    private _ch: Ch = null;\n\n    get bet () {\n        return this._bet;\n    }\n\n    set bet(value) {\n        this._bet = value;\n        this.betLabel.string = this._bet.toString();\n    }\n\n    private _balance: number = 5000;\n \n    get balance () {\n        return this._balance;\n    }\n\n    set balance (value) {\n        this._balance = value;\n        this.balanceLabel.string = this._balance.toString();\n    }\n\n    private _win: number = 0;\n \n    get win () {\n        return this._win;\n    }\n\n    set win (value) {\n        this._win = value;\n        this.winLabel.string = this._win.toString();\n    }\n\n    onLoad () {\n        if (cc.sys.localStorage.getItem('balance')) {\n            let balance = JSON.parse(cc.sys.localStorage.getItem('balance'));\n            this.balance = balance;\n        }\n        this.betLabel.string = this._bet.toString();\n        this._game = this.node.parent.getComponent(\"Game\");\n        this._ch = this._game.ch.getComponent(\"Ch\");\n        this._ch.multiplierLabel.string = \"X\" + this._multiplier;\n        cc.director.on(EventList.ChEvent.DYING, this._setBalance, this);\n        cc.director.on(EventList.ServerEvent.BET, this._onBet, this);\n        cc.director.on(EventList.ServerEvent.NOTIFY_PRICE, this._onNotifyPrice,this);\n        cc.director.on(EventList.ServerEvent.NOTIFY_MULTIPLIER, this._onNotifyMultiplier,this);\n    }\n\n    private _setBalance () {\n        cc.sys.localStorage.setItem('balance', this._balance);\n    }\n\n    private _onNotifyPrice(price: number) {\n        let thisMultiplier = this._multiplier;\n        this._multiplier = 1;\n        let priceLabel = cc.instantiate(this.priceLabel);\n        priceLabel.getComponent(cc.Label).string = \"\" + this.bet * price;\n        this._ch.node.addChild(priceLabel);\n        cc.tween(priceLabel)\n            .by(0.4, { position: cc.v3(-40, 250, 0)})\n            .call(() => {\n                priceLabel.destroy();\n                this._ch.multiplierLabel.string = \"X\" + 1;\n                let winLabel = cc.instantiate(this.priceLabel);\n                winLabel.getComponent(cc.Label).string = \"+\" + this.bet * price * thisMultiplier;\n                console.log(this._ch.multiplierLabel.node.position);\n                let worldPos = this._ch.multiplierLabel.node.convertToWorldSpaceAR(cc.v3(0, 0, 0));\n                let nodePos = this.node.parent.convertToNodeSpaceAR(worldPos);\n                winLabel.position = nodePos;\n                this.node.parent.addChild(winLabel);\n                cc.tween(winLabel)\n                    .to(1, { position: cc.v3(-380, 307, 0)})\n                    .call(() => {\n                        winLabel.destroy();\n                        this.balance += this.bet * price * thisMultiplier;\n                        this.win += this.bet * price * thisMultiplier;\n                    })\n                    .start()\n            })\n            .start()\n    }\n\n    private _onNotifyMultiplier (multiplier: number) {\n        this._multiplier += multiplier;\n        this._ch.multiplierLabel.string = \"X\" + this._multiplier;\n    }\n\n    private _onBet() {\n        this.balance -= this.bet;\n    }\n}\n","import EventList from \"./EventList\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Distance extends cc.Component {\n\n    @property(cc.Label) label: cc.Label = null;\n\n    private _count: number = 0;\n    private _alive: boolean = true;\n\n    public _distance: number = 0;\n\n    onLoad () {\n        cc.director.on(EventList.ChEvent.DYING, this._die, this);\n    }\n\n    start () {\n\n    }\n\n    update (dt) {\n        if (this._alive) {\n            this._count += 1;\n            if (this._count == 15) {\n                this._count = 0;\n                this._distance += 1;\n            }\n            this.label.string = this._distance.toString();\n        }\n    }\n\n    private _die () {\n        this._alive =false;\n    }\n}\n","const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class EventList extends cc.Component {\n\n    static readonly ChEvent = {\n\n        DYING : \"dying\",\n        DIE : \"die\",\n        TOUCH_GROUND : \"touchGround\",\n        TOUCH_WALL : \"touchWall\"\n    }\n\n    static readonly ServerEvent = {\n\n        GET_PRIZE : \"getPrize\",\n        BET : \"bet\",\n        NOTIFY_PRICE : \"notifyPrice\",\n        NOTIFY_MULTIPLIER : \"notifyMultiplier\"\n    }\n}\n","import EventList from \"./EventList\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Game extends cc.Component {\n   \n    @property(cc.Node) ch: cc.Node = null;\n    @property(cc.Node) console: cc.Node = null;\n    @property(cc.Node) distance: cc.Node = null;\n    @property(cc.Prefab) panel: cc.Prefab = null;\n    @property(cc.Node) bg: cc.Node = null;\n\n    onLoad () {\n        cc.director.getCollisionManager().enabled = true;\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this._pause, this);\n        this.node.on(EventList.ChEvent.DIE,this._panelPopUp, this);\n\n        \n        var self = this;\n        console.log('outside this :' + this);\n        cc.resources.load(\"fullVersion/apple\", cc.SpriteFrame, function (err, spriteFrame) {\n\n            self._onLoadCallback(spriteFrame);\n\n            console.log('inside this :' + this);\n//            self.bg.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n//            console.log('load apple complete');\n        });\n    }\n\n    private _onLoadCallback(spriteFrame: cc.SpriteFrame) {\n        this.bg.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n        console.log('load apple complete callback');\n    }\n\n    private _pause (event) {\n        switch(event.keyCode) {\n            case cc.macro.KEY.p:\n                if (!(cc.director.isPaused())) {\n                    cc.director.pause();\n                    break;    \n                }\n                else {\n                    cc.director.resume();\n                    break;\n                }\n        }\n    }\n\n    private _panelPopUp () {\n        const panel = cc.instantiate(this.panel);\n        panel.getComponent(\"Panel\").distanceLabel.string = this.distance.getComponent(\"Distance\")._distance + \"m\";\n        panel.getComponent(\"Panel\").totalWinLabel.string = this.console.getComponent(\"Console\").win;\n        if (cc.sys.localStorage.getItem('distance')) {\n            if (this.distance.getComponent(\"Distance\")._distance > JSON.parse(cc.sys.localStorage.getItem('distance'))) {\n                panel.getComponent(\"Panel\").newRecord.active = true;\n                cc.sys.localStorage.setItem('distance', this.distance.getComponent(\"Distance\")._distance);\n            }\n        }else {\n            panel.getComponent(\"Panel\").newRecord.active = true;\n            cc.sys.localStorage.setItem('distance', this.distance.getComponent(\"Distance\")._distance);\n        }\n        this.node.addChild(panel);\n    }\n}\n","import EventList from \"./EventList\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Ground extends cc.Component {\n\n    @property([cc.Prefab]) grounds: cc.Prefab[] = [];\n    @property(cc.Node) area1: cc.Node = null;\n    @property(cc.Node) area2: cc.Node = null;\n\n    private _bgMove: boolean = false;\n\n    onLoad () {\n        cc.director.on(EventList.ChEvent.TOUCH_GROUND, this._setMove, this);\n        cc.director.on(EventList.ChEvent.DYING, this._stopMove, this);\n        cc.director.on(EventList.ChEvent.TOUCH_WALL,this._onTouchWall, this);\n    }\n\n\n    update (dt) {\n        if (this._bgMove) {\n            this._move(this.area1);\n            this._move(this.area2);\n        }\n    }\n\n    private _move(area: cc.Node) {\n        if(area.x == -1920) {\n            var children = area.children;\n            for (var i =0; i < children.length; i++) {\n                children[i].destroy();\n            }\n            area.x = 1920;\n            var newGround = cc.instantiate(this.grounds[this._getRandomGround(this.grounds.length)]);\n            area.addChild(newGround);\n        }\n        area.x += -10;\n    }\n\n    private _bumpWall(area: cc.Node) {\n        area.x += 50;\n    }\n\n    private _onTouchWall() {\n        this._bgMove = false;\n        this._bumpWall(this.area1);\n        this._bumpWall(this.area2); \n    }\n\n    private _getRandomGround(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    private _setMove() {\n        this._bgMove = true;\n    }\n    \n    private _stopMove() {\n        this._bgMove = false;\n    }\n}\n","const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Lobby extends cc.Component {\n\n    @property(cc.ToggleContainer) characterSelection: cc.ToggleContainer = null;\n\n    @property(cc.Button) startBtn: cc.Button = null;\n\n    @property(cc.Button) joinBtn: cc.Button = null;\n\n    @property(cc.Button) leaveBtn: cc.Button = null;\n\n    @property(cc.Button) testBtn: cc.Button = null;\n\n    @property(cc.WebView) webviewReq: cc.WebView = null;\n\n    @property(cc.WebView) webviewRes: cc.WebView = null;\n\n    //private _reqUrl = 'https://jackychiu1024.github.io/agoraH5/joinReq/index.html';\n    private _reqUrl = document.location.origin + '/agoraH5/joinReq/index.html?h=100&w=200&action=mockJoin&appId=e3e16446c0d44bb6a04597f0668b9b6a&channelName=superstar_video_3_743872';\n\n    //https://jackychiu1024.github.io/agoraH5/joinReq/index.html?h=100&w=200&action=mockJoin&appId=e3e16446c0d44bb6a04597f0668b9b6a&channelName=superstar_video_3_743872\n\n    onLoad () {\n        this.startBtn.node.on(\"click\", this._start, this);\n        this.joinBtn.node.on(\"click\", this._join, this);\n        this.leaveBtn.node.on(\"click\", this._leave, this);\n        this.testBtn.node.on(\"click\", this._test, this);\n        this.webviewReq.url = this._reqUrl;\n        this.webviewReq.node.active = false;\n    }\n\n    private _start () {\n      //  this._sendLiveStreamReq();\n       cc.director.loadScene(\"game\"); \n    }\n\n    private _join() {\n        this.webviewReq.node.active = true;\n       // this.webviewReq.evaluateJS(\"join(mockOpt)\");\n     //  this.webviewReq.evaluateJS(\"mockJoin()\");\n    }\n\n    private _leave() {\n        //this.webviewReq.evaluateJS(\"leave()\");\n        this.webviewReq.node.active = false;\n    }\n\n    private _test() {\n        this.webviewReq.node.active = true;\n       // this.webviewReq.evaluateJS(\"printText()\");\n    }\n\n}\n","\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Panel extends cc.Component {\n\n    @property(cc.Label) distanceLabel: cc.Label = null;\n\n    @property(cc.Label) totalWinLabel: cc.Label = null;\n\n    @property(cc.Button) restart: cc.Button = null;\n    @property(cc.Button) leave: cc.Button = null;\n\n    @property(cc.Node) newRecord: cc.Node = null;\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        this.restart.node.on(\"click\", this._restart, this);\n        this.leave.node.on(\"click\", this._leave, this);\n    }\n\n    private _restart () {\n        cc.director.loadScene(\"game\");\n    }\n\n    private _leave () {\n        cc.director.loadScene(\"Lobby\");\n    }\n}\n","import EventList from \"./EventList\";\n\nconst {ccclass, property} = cc._decorator;\n\n//prevent editor error\ntype TokenPrizeType = {\n    val: number[],\n    multiplier: number[]\n}\n\n@ccclass\nexport default class Server extends cc.Component {\n\n    @property(cc.JsonAsset) tokenPricesJson : cc.JsonAsset = null;\n\n    private _tokenPrizes: TokenPrizeType[] = [];\n\n    onLoad () {\n        cc.director.on(EventList.ServerEvent.BET, this._getPrize, this);\n        this._tokenPrizes = this.tokenPricesJson.json.tokens;\n    }\n    \n    private _getRandomNumber(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    private _getPrize(tokenType:number) {\n        let prizes: number[] = [];\n\n        if(Math.random() < 0.3) {\n            // multiplier\n            prizes = this._tokenPrizes[tokenType].multiplier;\n            let multiplier = prizes[this._getRandomNumber(prizes.length)];\n            cc.director.emit(EventList.ServerEvent.NOTIFY_MULTIPLIER, multiplier);\n\n        } else {\n            //val\n            prizes = this._tokenPrizes[tokenType].val;\n            let price = prizes[this._getRandomNumber(prizes.length)];\n            cc.director.emit(EventList.ServerEvent.NOTIFY_PRICE, price);\n        }\n    }\n}\n","const {ccclass, property} = cc._decorator;\n\nexport enum TokenEnum {\n    token0,\n    token1\n};\n\n@ccclass\nexport default class TokenGenerator extends cc.Component {\n\n    @property(cc.Node) tokenPos: cc.Node = null;\n    @property([cc.Prefab]) tokens: cc.Prefab[] = [];\n\n    onLoad () {\n        var children = this.tokenPos.children;\n        for (var i = 0; i < children.length; i++) {\n            let tokenIdx = Math.floor(Math.random() * this.tokens.length);\n            var token = cc.instantiate(this.tokens[tokenIdx]);\n            children[i].addChild(token);\n        }\n    }\n}\n","import EventList from \"./EventList\";\nimport { TokenEnum } from \"./TokenGenerator\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Token extends cc.Component {\n\n    @property( {type: cc.Enum(TokenEnum) }) tokenName = TokenEnum.token0;\n    \n    onCollisionEnter (other: cc.CircleCollider, self: cc.CircleCollider) { \n        cc.director.emit(EventList.ServerEvent.BET, this.tokenName);\n        self.node.destroy();\n    }\n}\n"],"file":"index.js"}